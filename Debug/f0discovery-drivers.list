
f0discovery-drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000408  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004c8  080004d0  000104d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004c8  080004c8  000104d0  2**0
                  CONTENTS
  4 .ARM          00000000  080004c8  080004c8  000104d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004c8  080004d0  000104d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004c8  080004c8  000104c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004cc  080004cc  000104cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000104d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080004d0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080004d0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000104d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000715  00000000  00000000  000104f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001f0  00000000  00000000  00010c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  00010e00  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00010eb8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001192  00000000  00000000  00010f48  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000009df  00000000  00000000  000120da  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00004685  00000000  00000000  00012ab9  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001713e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d0  00000000  00000000  000171bc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080004b0 	.word	0x080004b0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080004b0 	.word	0x080004b0

08000108 <delay>:
 */
#include "stm32f0discovery.h"


void delay(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 1000000; i++);
 800010e:	2300      	movs	r3, #0
 8000110:	607b      	str	r3, [r7, #4]
 8000112:	e002      	b.n	800011a <delay+0x12>
 8000114:	687b      	ldr	r3, [r7, #4]
 8000116:	3301      	adds	r3, #1
 8000118:	607b      	str	r3, [r7, #4]
 800011a:	687b      	ldr	r3, [r7, #4]
 800011c:	4a03      	ldr	r2, [pc, #12]	; (800012c <delay+0x24>)
 800011e:	4293      	cmp	r3, r2
 8000120:	d9f8      	bls.n	8000114 <delay+0xc>
}
 8000122:	46c0      	nop			; (mov r8, r8)
 8000124:	46bd      	mov	sp, r7
 8000126:	b002      	add	sp, #8
 8000128:	bd80      	pop	{r7, pc}
 800012a:	46c0      	nop			; (mov r8, r8)
 800012c:	000f423f 	.word	0x000f423f

08000130 <main>:

int main(void)
{
 8000130:	b580      	push	{r7, lr}
 8000132:	b084      	sub	sp, #16
 8000134:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed;

	gpioLed.pGPIOx = GPIOC;
 8000136:	1d3b      	adds	r3, r7, #4
 8000138:	4a10      	ldr	r2, [pc, #64]	; (800017c <main+0x4c>)
 800013a:	601a      	str	r2, [r3, #0]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
 800013c:	1d3b      	adds	r3, r7, #4
 800013e:	2209      	movs	r2, #9
 8000140:	711a      	strb	r2, [r3, #4]
	gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000142:	1d3b      	adds	r3, r7, #4
 8000144:	2201      	movs	r2, #1
 8000146:	715a      	strb	r2, [r3, #5]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000148:	1d3b      	adds	r3, r7, #4
 800014a:	2202      	movs	r2, #2
 800014c:	719a      	strb	r2, [r3, #6]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800014e:	1d3b      	adds	r3, r7, #4
 8000150:	2201      	movs	r2, #1
 8000152:	721a      	strb	r2, [r3, #8]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPPD;
 8000154:	1d3b      	adds	r3, r7, #4
 8000156:	2200      	movs	r2, #0
 8000158:	71da      	strb	r2, [r3, #7]

	GPIO_PeriClockControl(GPIOC, ENABLE);
 800015a:	4b08      	ldr	r3, [pc, #32]	; (800017c <main+0x4c>)
 800015c:	2101      	movs	r1, #1
 800015e:	0018      	movs	r0, r3
 8000160:	f000 f838 	bl	80001d4 <GPIO_PeriClockControl>

	GPIO_Init(&gpioLed);
 8000164:	1d3b      	adds	r3, r7, #4
 8000166:	0018      	movs	r0, r3
 8000168:	f000 f898 	bl	800029c <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOC, GPIO_PIN_NO_9);
 800016c:	4b03      	ldr	r3, [pc, #12]	; (800017c <main+0x4c>)
 800016e:	2109      	movs	r1, #9
 8000170:	0018      	movs	r0, r3
 8000172:	f000 f963 	bl	800043c <GPIO_ToggleOutputPin>
		delay();
 8000176:	f7ff ffc7 	bl	8000108 <delay>
		GPIO_ToggleOutputPin(GPIOC, GPIO_PIN_NO_9);
 800017a:	e7f7      	b.n	800016c <main+0x3c>
 800017c:	48000800 	.word	0x48000800

08000180 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000180:	480d      	ldr	r0, [pc, #52]	; (80001b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000182:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000184:	e000      	b.n	8000188 <Reset_Handler+0x8>
 8000186:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000188:	480c      	ldr	r0, [pc, #48]	; (80001bc <LoopForever+0x6>)
  ldr r1, =_edata
 800018a:	490d      	ldr	r1, [pc, #52]	; (80001c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800018c:	4a0d      	ldr	r2, [pc, #52]	; (80001c4 <LoopForever+0xe>)
  movs r3, #0
 800018e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000190:	e002      	b.n	8000198 <LoopCopyDataInit>

08000192 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000192:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000194:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000196:	3304      	adds	r3, #4

08000198 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000198:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800019a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800019c:	d3f9      	bcc.n	8000192 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800019e:	4a0a      	ldr	r2, [pc, #40]	; (80001c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001a0:	4c0a      	ldr	r4, [pc, #40]	; (80001cc <LoopForever+0x16>)
  movs r3, #0
 80001a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001a4:	e001      	b.n	80001aa <LoopFillZerobss>

080001a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001a8:	3204      	adds	r2, #4

080001aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001ac:	d3fb      	bcc.n	80001a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001ae:	f000 f95b 	bl	8000468 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001b2:	f7ff ffbd 	bl	8000130 <main>

080001b6 <LoopForever>:

LoopForever:
    b LoopForever
 80001b6:	e7fe      	b.n	80001b6 <LoopForever>
  ldr   r0, =_estack
 80001b8:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80001bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001c0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001c4:	080004d0 	.word	0x080004d0
  ldr r2, =_sbss
 80001c8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001cc:	2000001c 	.word	0x2000001c

080001d0 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001d0:	e7fe      	b.n	80001d0 <ADC_COMP_IRQHandler>
	...

080001d4 <GPIO_PeriClockControl>:
 * @return 			- none
 *
 * @Note			- none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	000a      	movs	r2, r1
 80001de:	1cfb      	adds	r3, r7, #3
 80001e0:	701a      	strb	r2, [r3, #0]
	if(EnorDi == ENABLE)
 80001e2:	1cfb      	adds	r3, r7, #3
 80001e4:	781b      	ldrb	r3, [r3, #0]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d147      	bne.n	800027a <GPIO_PeriClockControl+0xa6>
	{
		if(pGPIOx == GPIOA)
 80001ea:	687a      	ldr	r2, [r7, #4]
 80001ec:	2390      	movs	r3, #144	; 0x90
 80001ee:	05db      	lsls	r3, r3, #23
 80001f0:	429a      	cmp	r2, r3
 80001f2:	d107      	bne.n	8000204 <GPIO_PeriClockControl+0x30>
		{
			GPIOA_PCLOCK_ENABLE();
 80001f4:	4b23      	ldr	r3, [pc, #140]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 80001f6:	695a      	ldr	r2, [r3, #20]
 80001f8:	4b22      	ldr	r3, [pc, #136]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 80001fa:	2180      	movs	r1, #128	; 0x80
 80001fc:	0289      	lsls	r1, r1, #10
 80001fe:	430a      	orrs	r2, r1
 8000200:	615a      	str	r2, [r3, #20]
	}
	else
	{
		// use macros to disable as in above code
	}
}
 8000202:	e03a      	b.n	800027a <GPIO_PeriClockControl+0xa6>
		else if(pGPIOx == GPIOB)
 8000204:	687b      	ldr	r3, [r7, #4]
 8000206:	4a20      	ldr	r2, [pc, #128]	; (8000288 <GPIO_PeriClockControl+0xb4>)
 8000208:	4293      	cmp	r3, r2
 800020a:	d107      	bne.n	800021c <GPIO_PeriClockControl+0x48>
			GPIOB_PCLOCK_ENABLE();
 800020c:	4b1d      	ldr	r3, [pc, #116]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 800020e:	695a      	ldr	r2, [r3, #20]
 8000210:	4b1c      	ldr	r3, [pc, #112]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 8000212:	2180      	movs	r1, #128	; 0x80
 8000214:	02c9      	lsls	r1, r1, #11
 8000216:	430a      	orrs	r2, r1
 8000218:	615a      	str	r2, [r3, #20]
}
 800021a:	e02e      	b.n	800027a <GPIO_PeriClockControl+0xa6>
		else if(pGPIOx == GPIOC)
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4a1b      	ldr	r2, [pc, #108]	; (800028c <GPIO_PeriClockControl+0xb8>)
 8000220:	4293      	cmp	r3, r2
 8000222:	d107      	bne.n	8000234 <GPIO_PeriClockControl+0x60>
			GPIOC_PCLOCK_ENABLE();
 8000224:	4b17      	ldr	r3, [pc, #92]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 8000226:	695a      	ldr	r2, [r3, #20]
 8000228:	4b16      	ldr	r3, [pc, #88]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 800022a:	2180      	movs	r1, #128	; 0x80
 800022c:	0309      	lsls	r1, r1, #12
 800022e:	430a      	orrs	r2, r1
 8000230:	615a      	str	r2, [r3, #20]
}
 8000232:	e022      	b.n	800027a <GPIO_PeriClockControl+0xa6>
		else if(pGPIOx == GPIOD)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	4a16      	ldr	r2, [pc, #88]	; (8000290 <GPIO_PeriClockControl+0xbc>)
 8000238:	4293      	cmp	r3, r2
 800023a:	d107      	bne.n	800024c <GPIO_PeriClockControl+0x78>
			GPIOD_PCLOCK_ENABLE();
 800023c:	4b11      	ldr	r3, [pc, #68]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 800023e:	695a      	ldr	r2, [r3, #20]
 8000240:	4b10      	ldr	r3, [pc, #64]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 8000242:	2180      	movs	r1, #128	; 0x80
 8000244:	0349      	lsls	r1, r1, #13
 8000246:	430a      	orrs	r2, r1
 8000248:	615a      	str	r2, [r3, #20]
}
 800024a:	e016      	b.n	800027a <GPIO_PeriClockControl+0xa6>
		else if(pGPIOx == GPIOE)
 800024c:	687b      	ldr	r3, [r7, #4]
 800024e:	4a11      	ldr	r2, [pc, #68]	; (8000294 <GPIO_PeriClockControl+0xc0>)
 8000250:	4293      	cmp	r3, r2
 8000252:	d107      	bne.n	8000264 <GPIO_PeriClockControl+0x90>
			GPIOE_PCLOCK_ENABLE();
 8000254:	4b0b      	ldr	r3, [pc, #44]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 8000256:	695a      	ldr	r2, [r3, #20]
 8000258:	4b0a      	ldr	r3, [pc, #40]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 800025a:	2180      	movs	r1, #128	; 0x80
 800025c:	0389      	lsls	r1, r1, #14
 800025e:	430a      	orrs	r2, r1
 8000260:	615a      	str	r2, [r3, #20]
}
 8000262:	e00a      	b.n	800027a <GPIO_PeriClockControl+0xa6>
		else if(pGPIOx == GPIOF)
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	4a0c      	ldr	r2, [pc, #48]	; (8000298 <GPIO_PeriClockControl+0xc4>)
 8000268:	4293      	cmp	r3, r2
 800026a:	d106      	bne.n	800027a <GPIO_PeriClockControl+0xa6>
			GPIOF_PCLOCK_ENABLE();
 800026c:	4b05      	ldr	r3, [pc, #20]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 800026e:	695a      	ldr	r2, [r3, #20]
 8000270:	4b04      	ldr	r3, [pc, #16]	; (8000284 <GPIO_PeriClockControl+0xb0>)
 8000272:	2180      	movs	r1, #128	; 0x80
 8000274:	03c9      	lsls	r1, r1, #15
 8000276:	430a      	orrs	r2, r1
 8000278:	615a      	str	r2, [r3, #20]
}
 800027a:	46c0      	nop			; (mov r8, r8)
 800027c:	46bd      	mov	sp, r7
 800027e:	b002      	add	sp, #8
 8000280:	bd80      	pop	{r7, pc}
 8000282:	46c0      	nop			; (mov r8, r8)
 8000284:	40021000 	.word	0x40021000
 8000288:	48000400 	.word	0x48000400
 800028c:	48000800 	.word	0x48000800
 8000290:	48000c00 	.word	0x48000c00
 8000294:	48001000 	.word	0x48001000
 8000298:	48001400 	.word	0x48001400

0800029c <GPIO_Init>:

/*
 * Init and De-Init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800029c:	b5b0      	push	{r4, r5, r7, lr}
 800029e:	b084      	sub	sp, #16
 80002a0:	af00      	add	r7, sp, #0
 80002a2:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80002a4:	2300      	movs	r3, #0
 80002a6:	60fb      	str	r3, [r7, #12]
	// 1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	795b      	ldrb	r3, [r3, #5]
 80002ac:	2b03      	cmp	r3, #3
 80002ae:	d81e      	bhi.n	80002ee <GPIO_Init+0x52>
	{
		// non-interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	795b      	ldrb	r3, [r3, #5]
 80002b4:	001a      	movs	r2, r3
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	791b      	ldrb	r3, [r3, #4]
 80002ba:	005b      	lsls	r3, r3, #1
 80002bc:	409a      	lsls	r2, r3
 80002be:	0013      	movs	r3, r2
 80002c0:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	681a      	ldr	r2, [r3, #0]
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	791b      	ldrb	r3, [r3, #4]
 80002cc:	0019      	movs	r1, r3
 80002ce:	2303      	movs	r3, #3
 80002d0:	408b      	lsls	r3, r1
 80002d2:	43db      	mvns	r3, r3
 80002d4:	0019      	movs	r1, r3
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	400a      	ands	r2, r1
 80002dc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	6819      	ldr	r1, [r3, #0]
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	68fa      	ldr	r2, [r7, #12]
 80002ea:	430a      	orrs	r2, r1
 80002ec:	601a      	str	r2, [r3, #0]
	}

	temp = 0;
 80002ee:	2300      	movs	r3, #0
 80002f0:	60fb      	str	r3, [r7, #12]

	// 2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	799b      	ldrb	r3, [r3, #6]
 80002f6:	001a      	movs	r2, r3
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	791b      	ldrb	r3, [r3, #4]
 80002fc:	005b      	lsls	r3, r3, #1
 80002fe:	409a      	lsls	r2, r3
 8000300:	0013      	movs	r3, r2
 8000302:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	689a      	ldr	r2, [r3, #8]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	791b      	ldrb	r3, [r3, #4]
 800030e:	0019      	movs	r1, r3
 8000310:	2303      	movs	r3, #3
 8000312:	408b      	lsls	r3, r1
 8000314:	43db      	mvns	r3, r3
 8000316:	0019      	movs	r1, r3
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	400a      	ands	r2, r1
 800031e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	6899      	ldr	r1, [r3, #8]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	68fa      	ldr	r2, [r7, #12]
 800032c:	430a      	orrs	r2, r1
 800032e:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000330:	2300      	movs	r3, #0
 8000332:	60fb      	str	r3, [r7, #12]

	// 3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	79db      	ldrb	r3, [r3, #7]
 8000338:	001a      	movs	r2, r3
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	791b      	ldrb	r3, [r3, #4]
 800033e:	005b      	lsls	r3, r3, #1
 8000340:	409a      	lsls	r2, r3
 8000342:	0013      	movs	r3, r2
 8000344:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	68da      	ldr	r2, [r3, #12]
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	791b      	ldrb	r3, [r3, #4]
 8000350:	0019      	movs	r1, r3
 8000352:	2303      	movs	r3, #3
 8000354:	408b      	lsls	r3, r1
 8000356:	43db      	mvns	r3, r3
 8000358:	0019      	movs	r1, r3
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	400a      	ands	r2, r1
 8000360:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	68d9      	ldr	r1, [r3, #12]
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	68fa      	ldr	r2, [r7, #12]
 800036e:	430a      	orrs	r2, r1
 8000370:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000372:	2300      	movs	r3, #0
 8000374:	60fb      	str	r3, [r7, #12]

	// 4.configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType));
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	7a1b      	ldrb	r3, [r3, #8]
 800037a:	001a      	movs	r2, r3
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	7a1b      	ldrb	r3, [r3, #8]
 8000380:	005b      	lsls	r3, r3, #1
 8000382:	409a      	lsls	r2, r3
 8000384:	0013      	movs	r3, r2
 8000386:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	685a      	ldr	r2, [r3, #4]
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	791b      	ldrb	r3, [r3, #4]
 8000392:	0019      	movs	r1, r3
 8000394:	2303      	movs	r3, #3
 8000396:	408b      	lsls	r3, r1
 8000398:	43db      	mvns	r3, r3
 800039a:	0019      	movs	r1, r3
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	400a      	ands	r2, r1
 80003a2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	6859      	ldr	r1, [r3, #4]
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	68fa      	ldr	r2, [r7, #12]
 80003b0:	430a      	orrs	r2, r1
 80003b2:	605a      	str	r2, [r3, #4]

	// 5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	795b      	ldrb	r3, [r3, #5]
 80003b8:	2b02      	cmp	r3, #2
 80003ba:	d13b      	bne.n	8000434 <GPIO_Init+0x198>
	{
		// configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	791a      	ldrb	r2, [r3, #4]
 80003c0:	240b      	movs	r4, #11
 80003c2:	193b      	adds	r3, r7, r4
 80003c4:	08d2      	lsrs	r2, r2, #3
 80003c6:	701a      	strb	r2, [r3, #0]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	791a      	ldrb	r2, [r3, #4]
 80003cc:	250a      	movs	r5, #10
 80003ce:	197b      	adds	r3, r7, r5
 80003d0:	2107      	movs	r1, #7
 80003d2:	400a      	ands	r2, r1
 80003d4:	701a      	strb	r2, [r3, #0]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	193a      	adds	r2, r7, r4
 80003dc:	7812      	ldrb	r2, [r2, #0]
 80003de:	3208      	adds	r2, #8
 80003e0:	0092      	lsls	r2, r2, #2
 80003e2:	58d1      	ldr	r1, [r2, r3]
 80003e4:	197b      	adds	r3, r7, r5
 80003e6:	781b      	ldrb	r3, [r3, #0]
 80003e8:	009b      	lsls	r3, r3, #2
 80003ea:	220f      	movs	r2, #15
 80003ec:	409a      	lsls	r2, r3
 80003ee:	0013      	movs	r3, r2
 80003f0:	43db      	mvns	r3, r3
 80003f2:	0018      	movs	r0, r3
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	193a      	adds	r2, r7, r4
 80003fa:	7812      	ldrb	r2, [r2, #0]
 80003fc:	4001      	ands	r1, r0
 80003fe:	3208      	adds	r2, #8
 8000400:	0092      	lsls	r2, r2, #2
 8000402:	50d1      	str	r1, [r2, r3]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	193a      	adds	r2, r7, r4
 800040a:	7812      	ldrb	r2, [r2, #0]
 800040c:	3208      	adds	r2, #8
 800040e:	0092      	lsls	r2, r2, #2
 8000410:	58d1      	ldr	r1, [r2, r3]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	7a5b      	ldrb	r3, [r3, #9]
 8000416:	001a      	movs	r2, r3
 8000418:	197b      	adds	r3, r7, r5
 800041a:	781b      	ldrb	r3, [r3, #0]
 800041c:	009b      	lsls	r3, r3, #2
 800041e:	409a      	lsls	r2, r3
 8000420:	0013      	movs	r3, r2
 8000422:	0018      	movs	r0, r3
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	193a      	adds	r2, r7, r4
 800042a:	7812      	ldrb	r2, [r2, #0]
 800042c:	4301      	orrs	r1, r0
 800042e:	3208      	adds	r2, #8
 8000430:	0092      	lsls	r2, r2, #2
 8000432:	50d1      	str	r1, [r2, r3]
	}
}
 8000434:	46c0      	nop			; (mov r8, r8)
 8000436:	46bd      	mov	sp, r7
 8000438:	b004      	add	sp, #16
 800043a:	bdb0      	pop	{r4, r5, r7, pc}

0800043c <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800043c:	b580      	push	{r7, lr}
 800043e:	b082      	sub	sp, #8
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
 8000444:	000a      	movs	r2, r1
 8000446:	1cfb      	adds	r3, r7, #3
 8000448:	701a      	strb	r2, [r3, #0]
	pGPIOx->ODR ^= (1 << PinNumber);
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	695b      	ldr	r3, [r3, #20]
 800044e:	1cfa      	adds	r2, r7, #3
 8000450:	7812      	ldrb	r2, [r2, #0]
 8000452:	2101      	movs	r1, #1
 8000454:	4091      	lsls	r1, r2
 8000456:	000a      	movs	r2, r1
 8000458:	405a      	eors	r2, r3
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	615a      	str	r2, [r3, #20]
}
 800045e:	46c0      	nop			; (mov r8, r8)
 8000460:	46bd      	mov	sp, r7
 8000462:	b002      	add	sp, #8
 8000464:	bd80      	pop	{r7, pc}
	...

08000468 <__libc_init_array>:
 8000468:	b570      	push	{r4, r5, r6, lr}
 800046a:	2600      	movs	r6, #0
 800046c:	4d0c      	ldr	r5, [pc, #48]	; (80004a0 <__libc_init_array+0x38>)
 800046e:	4c0d      	ldr	r4, [pc, #52]	; (80004a4 <__libc_init_array+0x3c>)
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	10a4      	asrs	r4, r4, #2
 8000474:	42a6      	cmp	r6, r4
 8000476:	d109      	bne.n	800048c <__libc_init_array+0x24>
 8000478:	2600      	movs	r6, #0
 800047a:	f000 f819 	bl	80004b0 <_init>
 800047e:	4d0a      	ldr	r5, [pc, #40]	; (80004a8 <__libc_init_array+0x40>)
 8000480:	4c0a      	ldr	r4, [pc, #40]	; (80004ac <__libc_init_array+0x44>)
 8000482:	1b64      	subs	r4, r4, r5
 8000484:	10a4      	asrs	r4, r4, #2
 8000486:	42a6      	cmp	r6, r4
 8000488:	d105      	bne.n	8000496 <__libc_init_array+0x2e>
 800048a:	bd70      	pop	{r4, r5, r6, pc}
 800048c:	00b3      	lsls	r3, r6, #2
 800048e:	58eb      	ldr	r3, [r5, r3]
 8000490:	4798      	blx	r3
 8000492:	3601      	adds	r6, #1
 8000494:	e7ee      	b.n	8000474 <__libc_init_array+0xc>
 8000496:	00b3      	lsls	r3, r6, #2
 8000498:	58eb      	ldr	r3, [r5, r3]
 800049a:	4798      	blx	r3
 800049c:	3601      	adds	r6, #1
 800049e:	e7f2      	b.n	8000486 <__libc_init_array+0x1e>
 80004a0:	080004c8 	.word	0x080004c8
 80004a4:	080004c8 	.word	0x080004c8
 80004a8:	080004c8 	.word	0x080004c8
 80004ac:	080004cc 	.word	0x080004cc

080004b0 <_init>:
 80004b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004b2:	46c0      	nop			; (mov r8, r8)
 80004b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004b6:	bc08      	pop	{r3}
 80004b8:	469e      	mov	lr, r3
 80004ba:	4770      	bx	lr

080004bc <_fini>:
 80004bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004be:	46c0      	nop			; (mov r8, r8)
 80004c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004c2:	bc08      	pop	{r3}
 80004c4:	469e      	mov	lr, r3
 80004c6:	4770      	bx	lr
